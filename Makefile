PROVIDER ?= virtualbox

# Master Control Makefile

# --- Main Experiment Outputs ---
# These variables define the key result files generated by the analysis scripts.

# (R1) Service Disruption
BASELINE_DISRUPTION_PDF := results/baseline/disruption_times.pdf
SOLUTION_DISRUPTION_PDF := results/solution/disruption_times.pdf

# (R2) Unmet-Interest Ratio
BASELINE_LOSS_PDF := results/baseline/loss_comparison.pdf
SOLUTION_LOSS_PDF := results/solution/loss_comparison.pdf

# (R3) Flooding Overhead
BASELINE_OVERHEAD_PDF := results/baseline/overhead_timeseries.pdf
SOLUTION_OVERHEAD_PDF := results/solution/overhead_timeseries.pdf


# --- Paper Figure Dependencies ---
# These variables link the experiment outputs to the figures in the paper.
MAIN_TEX := paper/OptoFlood.tex

# Define final figure paths for the paper
BASELINE_DISRUPTION_FIGURE := paper/figures/baseline_disruption.pdf
SOLUTION_DISRUPTION_FIGURE := paper/figures/solution_disruption.pdf
BASELINE_LOSS_FIGURE       := paper/figures/baseline_loss.pdf
SOLUTION_LOSS_FIGURE       := paper/figures/solution_loss.pdf
BASELINE_OVERHEAD_FIGURE   := paper/figures/baseline_overhead.pdf
SOLUTION_OVERHEAD_FIGURE   := paper/figures/solution_overhead.pdf

# Group all figures needed for the paper
BASELINE_PAPER_FIGURES := $(BASELINE_DISRUPTION_FIGURE) $(BASELINE_LOSS_FIGURE) $(BASELINE_OVERHEAD_FIGURE)
SOLUTION_PAPER_FIGURES := $(SOLUTION_DISRUPTION_FIGURE) $(SOLUTION_LOSS_FIGURE) $(SOLUTION_OVERHEAD_FIGURE)

PAPER_PDF := paper/OptoFlood.pdf
STATIC_FIGURES := paper/figures/NLSR_Work_Flow.png \
                  paper/figures/Producer_Mobility_Problems.png \
                  paper/figures/Topology.png
ALL_FIGURES := $(STATIC_FIGURES) $(BASELINE_PAPER_FIGURES) $(SOLUTION_PAPER_FIGURES)

# Common application source files
APP_SRCS := experiment/app/producer.cpp \
            experiment/app/consumer.cpp \
            experiment/app/trust-schema.conf

# Experiment-specific source files
BASELINE_SRCS := experiment/baseline/Vagrantfile \
                experiment/baseline/Makefile
                
SOLUTION_SRCS := experiment/solution/Vagrantfile \
                experiment/solution/Makefile

# Common tools used by both experiments
TOOLS_SRCS := experiment/tool/exp.py \
             experiment/tool/plot_latency.py \
             experiment/tool/plot_loss.py \
             experiment/tool/plot_overhead.py

# Main target
all: $(PAPER_PDF)

# Ensure results directories exist
results:
	mkdir $@

results/baseline: | results
	mkdir $@

results/solution: | results
	mkdir $@

paper/figures:
	mkdir $@

# Boxes check
box/initial/initial.$(PROVIDER).box: box/initial/Vagrantfile
	-rm -f $@
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/initial vagrant up --provision
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/initial vagrant package --output $@
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/initial vagrant halt
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/initial vagrant destroy -f

box/baseline/baseline.$(PROVIDER).box: box/baseline/Vagrantfile box/initial/initial.$(PROVIDER).box
	-rm -f $@
	ACTUAL_INITIAL_BOX_PATH="box/initial/initial.$(PROVIDER).box" \
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/baseline vagrant up --provision
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/baseline vagrant package --output $@
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/baseline vagrant halt
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/baseline vagrant destroy -f

box/solution/solution.$(PROVIDER).box: box/solution/Vagrantfile box/initial/initial.$(PROVIDER).box
	-rm -f $@
	ACTUAL_INITIAL_BOX_PATH="box/initial/initial.$(PROVIDER).box" \
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/solution vagrant up --provision
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/solution vagrant package --output $@
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/solution vagrant halt
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/solution vagrant destroy -f

# Updated build-boxes target to reflect provider-specific boxes
build-boxes: box/baseline/baseline.$(PROVIDER).box box/solution/solution.$(PROVIDER).box

# SSH config file for baseline experiment
.ssh_config_baseline: experiment/baseline/Vagrantfile box/baseline/baseline.$(PROVIDER).box
	ACTUAL_BASELINE_BOX_PATH="box/baseline/baseline.$(PROVIDER).box" \
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/baseline vagrant up
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/baseline vagrant ssh-config --host baseline > .ssh_config_baseline

# SSH config file for solution experiment
.ssh_config_solution: experiment/solution/Vagrantfile box/solution/solution.$(PROVIDER).box
	ACTUAL_SOLUTION_BOX_PATH="box/solution/solution.$(PROVIDER).box" \
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/solution vagrant up
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/solution vagrant ssh-config --host solution > .ssh_config_solution

# Rsync commands
RSYNC_BASELINE = rsync -avH -e "ssh -F .ssh_config_baseline"
RSYNC_SOLUTION = rsync -avH -e "ssh -F .ssh_config_solution"

# Define all expected result files from one experiment run
BASELINE_RESULTS := $(BASELINE_DISRUPTION_PDF) \
                    results/baseline/disruption_metrics.txt \
                    $(BASELINE_LOSS_PDF) \
                    results/baseline/loss_ratio.txt \
                    $(BASELINE_OVERHEAD_PDF) \
                    results/baseline/overhead_total.txt

SOLUTION_RESULTS := $(SOLUTION_DISRUPTION_PDF) \
                    results/solution/disruption_metrics.txt \
                    $(SOLUTION_LOSS_PDF) \
                    results/solution/loss_ratio.txt \
                    $(SOLUTION_OVERHEAD_PDF) \
                    results/solution/overhead_total.txt

# Baseline experiment results
$(BASELINE_RESULTS): $(APP_SRCS) $(BASELINE_SRCS) $(TOOLS_SRCS) .ssh_config_baseline | results/baseline
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/baseline vagrant up
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/baseline vagrant ssh -c 'cd /home/vagrant/mini-ndn/flooding/experiment/baseline && make clean && make all'
	$(RSYNC_BASELINE) baseline:/home/vagrant/mini-ndn/flooding/experiment/baseline/results/ results/baseline
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/baseline vagrant halt -f || true

# Solution experiment results
$(SOLUTION_RESULTS): $(APP_SRCS) $(SOLUTION_SRCS) $(TOOLS_SRCS) .ssh_config_solution | results/solution
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/solution vagrant up
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/solution vagrant ssh -c 'cd /home/vagrant/mini-ndn/flooding/experiment/solution && make clean && make all'
	$(RSYNC_SOLUTION) solution:/home/vagrant/mini-ndn/flooding/experiment/solution/results/ results/solution;
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/solution vagrant halt -f || true

# --- Copy Results to Paper Directory ---
# These rules copy the final PDF results into the paper's figures directory.

$(BASELINE_DISRUPTION_FIGURE): $(BASELINE_RESULTS) | paper/figures
	cp $(BASELINE_DISRUPTION_PDF) $@

$(BASELINE_LOSS_FIGURE): $(BASELINE_RESULTS) | paper/figures
	cp $(BASELINE_LOSS_PDF) $@

$(BASELINE_OVERHEAD_FIGURE): $(BASELINE_RESULTS) | paper/figures
	cp $(BASELINE_OVERHEAD_PDF) $@

$(SOLUTION_DISRUPTION_FIGURE): $(SOLUTION_RESULTS) | paper/figures
	cp $(SOLUTION_DISRUPTION_PDF) $@

$(SOLUTION_LOSS_FIGURE): $(SOLUTION_RESULTS) | paper/figures
	cp $(SOLUTION_LOSS_PDF) $@

$(SOLUTION_OVERHEAD_FIGURE): $(SOLUTION_RESULTS) | paper/figures
	cp $(SOLUTION_OVERHEAD_PDF) $@

# Generate the paper
$(PAPER_PDF): $(MAIN_TEX) $(ALL_FIGURES) | paper
	$(MAKE) -C paper

# Cleanup
clean: clean-ssh-config
	rm -rf results
	cd paper && $(MAKE) clean

deep-clean:
	@echo "Error: You must specify a provider for deep-clean."
	@echo "Usage: make deep-clean-kvm  (for KVM/libvirt)"
	@echo "   or: make deep-clean-vb   (for VirtualBox)"
	@exit 1

# Renamed target for actual implementation
_deep-clean_provider: clean
	rm -rf $(BASELINE_FIGURE) $(SOLUTION_FIGURE) $(PAPER_PDF)
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/baseline vagrant destroy -f || true
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=experiment/solution vagrant destroy -f || true
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/baseline vagrant destroy -f || true
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/solution vagrant destroy -f || true
	VAGRANT_DEFAULT_PROVIDER=$(PROVIDER) VAGRANT_CWD=box/initial  vagrant destroy -f || true
	vagrant box remove box/baseline/baseline.$(PROVIDER).box || true
	vagrant box remove box/solution/solution.$(PROVIDER).box || true
	vagrant box remove box/initial/initial.$(PROVIDER).box || true
	rm -f box/baseline/baseline.$(PROVIDER).box
	rm -f box/solution/solution.$(PROVIDER).box
	rm -f box/initial/initial.$(PROVIDER).box


# Clean SSH config file
clean-ssh-config:
	rm -f .ssh_config_baseline .ssh_config_solution

# Provider-specific convenience targets
kvm:
	@echo "Setting provider to libvirt (KVM)"
	@$(MAKE) PROVIDER=libvirt $(filter-out $@,$(MAKECMDGOALS))

vb:
	@echo "Setting provider to VirtualBox"
	@$(MAKE) PROVIDER=virtualbox $(filter-out $@,$(MAKECMDGOALS))

deep-clean-kvm:
	@echo "Deep cleaning using libvirt (KVM) provider..."
	@$(MAKE) PROVIDER=libvirt _deep-clean_provider

deep-clean-vb:
	@echo "Deep cleaning using VirtualBox provider..."
	@$(MAKE) PROVIDER=virtualbox _deep-clean_provider

.PHONY: all build-boxes clean deep-clean _deep-clean_provider clean-ssh-config kvm vb deep-clean-kvm deep-clean-vb

.DELETE_ON_ERROR:

.NOTINTERMEDIATE:
