#Initial Box Vagrantfile

$INSTALL_BASE = <<EOF
  export DEBIAN_FRONTEND=noninteractive

  # Update and install dependencies
  sudo apt-get update
  sudo apt-get install -y build-essential 
  sudo apt-get install -y python3-pip 
  sudo apt-get install -y python3-pep8 
  sudo apt-get install -y pkg-config 
  sudo apt-get install -y libboost-all-dev 
  sudo apt-get install -y libssl-dev 
  sudo apt-get install -y libsqlite3-dev 
  sudo apt-get install -y libpcap-dev 
  sudo apt-get install -y libsystemd-dev
  sudo apt-get install -y tcpdump
  sudo apt-get install -y tshark
  sudo apt-get install -y python3-venv

  # --- Install NDN Wireshark Dissector ---
  # Create a standard directory for the dissector
  sudo mkdir -p /usr/local/share/ndn-dissect-wireshark
  # Copy the dissector from the synced folder to the standard location
  sudo cp /vagrant/ndn-tools/tools/dissect-wireshark/ndn.lua /usr/local/share/ndn-dissect-wireshark/
  # Find the global wireshark init.lua and append the dofile command to load our dissector
  INIT_LUA_PATH=$(find /usr/share/wireshark -name "init.lua" | head -n 1)
  if [ -f "$INIT_LUA_PATH" ]; then
    echo 'dofile("/usr/local/share/ndn-dissect-wireshark/ndn.lua")' | sudo tee -a $INIT_LUA_PATH
  else
    echo "Wireshark init.lua not found, dissector not installed."
  fi
  # --- End Dissector Install ---

  # Set environment variables in .profile
  echo "export PATH=\$PATH:/usr/local/bin" >> /home/vagrant/.profile
  echo "export LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:/usr/local/lib64/" >> /home/vagrant/.profile
  echo "export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig/" >> /home/vagrant/.profile
EOF

Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-22.04"
  config.vm.box_version = "202309.08.0"

  # Sync the project root directory to /vagrant in the VM
  config.vm.synced_folder ".", "/vagrant"

  config.vm.network "private_network", type: "dhcp"

  common_cpus   = 4
  common_memory = 4096

  config.vm.provider :virtualbox do |vb|
    vb.name = "initial-virtualbox"
    vb.cpus = common_cpus
    vb.memory = common_memory
    vb.customize ["modifyvm", :id, "--vram", "256"]
    vb.gui = false
  end

  config.vm.provider :libvirt do |lv|
    lv.driver = "kvm"
    require 'etc'
    dirname = __dir__.split('/')[-2..-1].join('-')
    lv.default_prefix = "#{Etc.getpwuid.uid}-#{dirname}-"
    lv.cpus   = common_cpus
    lv.memory = common_memory
  end

  config.vm.provision "shell", inline: $INSTALL_BASE, privileged: false
end
