#Initial Box Vagrantfile

$INSTALL_BASE = <<EOF
  set -e -u -o pipefail

  # Packages required by miniNDN. These are installed once here, to avoid
  # having the miniNDN install.sh script fetch and install then separately
  # when building each of baseline.box and solution.box. The list was derived
  # by running "apt-mark showmanual" in a running box/baseline/baseline.box.
	PKGS_MININDN="apparmor apport autoconf automake autotools-dev base-files \
				        base-passwd bash bcache-tools bind9-dnsutils bsdutils btrfs-progs \
				        build-essential busybox-static byobu bzip2 ca-certificates \
				        cgroup-tools cgroupfs-mount cloud-guest-utils cloud-init \
				        cloud-initramfs-copymods cloud-initramfs-dyn-netconf cpio \
				        cryptsetup curl dash diffutils dirmngr dmidecode dosfstools ed \
				        ethtool file findutils ftp fwupd gcc git gnupg grep gzip hdparm \
				        help2man hostname htop info init iperf iptables iputils-tracepath \
				        irqbalance landscape-common libboost-all-dev libboost-atomic-dev \
				        libboost-chrono-dev libboost-date-time-dev libboost-filesystem-dev \
				        libboost-iostreams-dev libboost-log-dev \
				        libboost-program-options-dev libboost-regex-dev \
				        libboost-stacktrace-dev libboost-system-dev libboost-thread-dev \
				        libc6-dev libconfig-dev libdbus-1-dev libdebconfclient0 \
				        libevent-dev libflashrom1 libftdi1-2 libigraph-dev libnl-3-dev \
				        libnl-genl-3-dev libnl-route-3-dev libpcap-dev libsqlite3-dev \
				        libssl-dev libsystemd-dev libtool login lshw lsof lvm2 \
				        lxd-agent-loader make man-db manpages mdadm mtr-tiny \
				        multipath-tools nano ncurses-bin needrestart net-tools \
				        network-manager nftables ntfs-3g open-iscsi open-vm-tools \
				        openssh-client openssh-server openvswitch-switch \
				        openvswitch-testcontroller overlayroot parted patch pciutils pep8 \
				        pkg-config plymouth plymouth-theme-ubuntu-text pollinate pyflakes3 \
				        pylint python-is-python3 python3-matplotlib python3-numpy \
				        python3-pep8 python3-pexpect python3-pip python3-psutil python3-tk \
				        python3-venv rfkill rsync screen snapd socat \
				        software-properties-common sosreport ssh ssh-import-id strace \
				        sysvinit-utils tcpdump telnet time tmux tnftp tshark \
				        ubuntu-minimal ufw wget wireless-tools xfsprogs xterm xz-utils"

  # Update and install dependencies
  sudo DEBIAN_FRONTEND=noninteractive apt-get update
  sudo DEBIAN_FRONTEND=noninteractive apt-get install -y -qq --no-install-recommends $PKGS_MININDN

  # --- Non-interactive tshark installation ---
  # Pre-answer the wireshark-common configuration question to avoid interactive prompts
  echo "wireshark-common wireshark-common/install-setuid boolean true" | sudo debconf-set-selections
  sudo DEBIAN_FRONTEND=noninteractive apt-get install -y tshark

  # Set environment variables in .profile
  echo "export PATH=\$PATH:/usr/local/bin"                  >> /home/vagrant/.profile
  echo "export LD_LIBRARY_PATH=/usr/local/lib64/"           >> /home/vagrant/.profile
  echo "export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig/" >> /home/vagrant/.profile
EOF

Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-22.04"
  config.vm.box_version = "202309.08.0"

  # Sync the project root directory to /vagrant in the VM
  config.vm.synced_folder ".", "/vagrant"

  config.vm.network "private_network", type: "dhcp"

  common_cpus   = 8
  common_memory = 16384

  config.vm.provider :virtualbox do |vb|
    vb.name = "initial-virtualbox"
    vb.cpus = common_cpus
    vb.memory = common_memory
    vb.customize ["modifyvm", :id, "--vram", "256"]
    vb.gui = false
  end

  config.vm.provider :libvirt do |lv|
    lv.driver = "kvm"
    require 'etc'
    dirname = __dir__.split('/')[-2..-1].join('-')
    lv.default_prefix = "#{Etc.getpwuid.uid}-#{dirname}-"
    lv.cpus   = common_cpus
    lv.memory = common_memory
  end

  config.vm.provision "shell", inline: $INSTALL_BASE, privileged: false
end
